#!/bin/sh
# Author: Ho-Ren (Jack) Chuang
# Note: if you die here
taskset -p 0x1 $$ # Pin myself first
#taskset -p $$ # read

echo "INIT SCRIPT pid [$$]"
mount -t proc none /proc
mount -t sysfs none /sys
mount -t debugfs none /sys/kernel/debug
#mkdir /tmp
#mount -t tmpfs none /tmp
mdev -s # We need this to find /dev/sda later
echo -e "nBoot took $(cut -d' ' -f1 /proc/uptime) secondsn\n"
chmod 777 /tmp # mysqld needs it, otherwise cannot work


####### STOP the world (uncommented for debugging) ################
#exec /bin/sh
#################

echo ""
echo "If not pinning sh on cpu 0 (host), you may loss sh interface!"
echo ""
echo "this /bin/sh's pid = \$\$"
echo ""
echo "set affinity"
echo "taskset -p \$\$"
echo "taskset <cpu_affinity_bitmask> <command>"
echo "0x00000001  is processor #0"
echo "0x00000003  is processors #0 and #1"
echo ""
echo "./kmeans -c 100 -n 1 -t 6 -p 5000000"
echo ""
echo ""
echo "irq status (hided)"
#echo `cat /proc/interrupts | grep -v ".*0 *0 *0.*"`
echo ""
echo "irq commands (hided)"
#echo "cat /proc/interrupts"
#echo "cat /proc/irq/4/smp_affinity"
#echo "\t`cat /proc/irq/4/smp_affinity`"
#echo "echo 1 > /proc/irq/4/smp_affinity"
#echo "kernel: irq_select_affinity_usr()"
echo ""
echo ""
echo "======"
echo " EXP (NPB)"
echo "======"
echo "./ep-ao0-van-echo 1 3"
echo "./ep-bo0-van-echo 1 3"
echo "./epCO0-van-echo 1 3"
echo ""
echo "./ep-ao0-cpu0 |grep \"Time in seconds\" &"
echo "./ep-ao0-cpu1 |grep \"Time in seconds\" &"
echo "./ep-ao0-cpu2 |grep \"Time in seconds\" &"
#echo "top -bn 1 -o +%CPU |grep "^ "|head -n 3"
echo "top -bn 1 |grep \"^ \" |grep -v PPID |sort -gk 8 |head -n 5"
echo ""
echo "time ./exp1.sh"
echo "time exec ./exp1.sh"
echo ""
echo `tty`
echo "console_here" > /dev/console
echo -e "\n\n"

echo -e "\n\n"
echo "======================"
echo "Phoenix (MapReduce)"
echo "======================"
echo "phoenix2_dhype_auto_kmeans -t 4 -c 10 -p 500000"
echo "phoenix2_dhype_auto_word_count /input/word_100MB.txt 10 4" # top X is not important (second from last)
echo -e "\n\n"

echo -e "\n\n"
echo "=== net begin ==="
echo -e "\n\n"

echo "cat /proc/irq/25/smp_affinity"
cat /proc/irq/25/smp_affinity
echo "cat /proc/irq/26/smp_affinity"
cat /proc/irq/26/smp_affinity

echo "cat /proc/irq/25/smp_affinity_list"
cat /proc/irq/25/smp_affinity_list
echo "cat /proc/irq/26/smp_affinity_list"
cat /proc/irq/26/smp_affinity_list



echo "echo 1 > /proc/irq/25/smp_affinity"
echo "1" > /proc/irq/25/smp_affinity
echo "echo 1 > /proc/irq/26/smp_affinity"
#echo 1 > /proc/irq/26/smp_affinity

echo "echo 0 > /proc/irq/25/smp_affinity_list"
echo "0" > /proc/irq/25/smp_affinity_list

echo "echo 0 > /proc/irq/26/smp_affinity_list"
#echo 0 > /proc/irq/26/smp_affinity_list



echo "==========="
echo "= Net app ="
echo "==========="
echo
echo "=== Nginx ==="
echo
echo "ls /usr/local/nginx/conf"
ls /usr/local/nginx/conf
echo "ls /usr/local/nginx/html"
ls /usr/local/nginx/logs
echo "ls /usr/local/nginx/logs"
ls /usr/local/nginx/logs
echo
echo "Exec (VM)"
#echo "taskset 0x1 nginx"
echo "taskset 0x1 /bin/nginx"
echo "taskset 0x2 /bin/nginx"
echo
echo "Reload"
echo "taskset 0x1 nginx -s reload"
echo "taskset 0x2 /bin/nginx -s reload"
echo
echo "Client (HOST)"
echo "curl http://192.168.33.2"
echo "ab -n 1 -c 1 http://192.168.33.2:80/index.html" # file name is required
echo
echo "=== Memcached ==="
echo
echo "TODO"
echo
echo "=== Redis (single-process-threaded witih backgroup threads (e.g. disk writ-back) ==="
echo
echo
echo "============"
echo "Current working on"
echo "============"
echo
echo "Exec Nginx (VM)"
echo
echo "taskset 0x1 /bin/nginx"
echo "taskset 0x2 /bin/nginx"
echo "Reload Nginx (VM)"
echo "taskset 0x1 nginx -s reload"
echo "taskset 0x2 /bin/nginx -s reload"
echo
echo "Redis env config (VM)"
echo "sysctl vm.overcommit_memory=1"
sysctl vm.overcommit_memory=1
echo "echo 1024 > /proc/sys/net/core/somaxconn"
echo "1024" > /proc/sys/net/core/somaxconn
echo "echo never > /sys/kernel/mm/transparent_hugepage/enabled"
echo "never" > /sys/kernel/mm/transparent_hugepage/enabled
echo
echo "Exec Redis (VM)"
echo "taskset 0x1 /bin/redis-server&"
echo "\tExec Redis client (HOST):"
echo "redis-benchmark -h 192.168.33.2 -p 6379 -t get -n 10000 -q"
echo "redis-benchmark -h 192.168.33.2 -p 6379 -t set,lpush -n 10000 -q"
echo "-c <conn> : default=50"
echo "-n <req> : default=xxx"
echo "netstat -a |grep 6379"
echo
echo
echo "Exec memcached (VM)"
echo "taskset 0x1 /bin/memcached_vanilla -t 1 -p 11211 -m 15360 -vvv -u jackchuang&"
echo "taskset 0x1 /bin/memcached_vanilla -t 1 -p 11211 -m 15360 -u jackchuang&"
echo "taskset 0x2 /bin/memcached_vanilla -t 1 -p 11211 -m 15360 -u jackchuang&"
echo "taskset 0x4 /bin/memcached_vanilla -t 1 -p 11211 -m 15360 -u jackchuang&"
echo "taskset 0x1 /bin/memcached -t 3 -p 11211 -m 15360 -u jackchuang&"
echo
echo "(Host) client echo5"
echo "~/c/pophype_make_ramdisk/bin_src/memcached-1.5.19/memcached -t 1 -p 11211 -m 15360"
echo "~/c/pophype_make_ramdisk/bin_manual/memcached_vanilla -t 1 -p 11211 -m 15360"
echo "-n <size> : The default is 48"
echo "-t <threads> : The default is 4"
echo "-m <num/M> : The default is 64M"
echo "netstat -a |grep 11211"
echo
echo "(Host) client echo5:"
echo "memaslap -s localhost:11211 -t 5s -T 1 -c 1 -X 100b"
echo "memaslap -s 192.168.33.2:11211 -t 5s -T 1 -c 1 -X 100b"
#echo "vire-benchmark  -h 192.168.33.2 -p 11211 -c 20 -t get -n 100 -q"
#echo "vire-benchmark  -h 192.168.33.2 -p 11211 -c 20 -n 100 -q"
echo "-t get 's results : <get null>/<get size>"
echo "-T <thread> : # of threads"
echo
echo "100000 A TIMEOUT OCCURRED, No active_fd were found"
#echo "memslap --servers=192.168.33.2:11211 --initial-load=10000 --concurrency=1 --execute-number=1000000 --flush --test get"
echo "3x"
echo "memslap --servers=192.168.33.2:11211 --initial-load=10000 --concurrency=10 --execute-number=100000 --flush"
#echo "memslap --servers=192.168.33.2:11211 --initial-load=10000 --concurrency=10 --execute-number=100000 --flush --test get"
echo
#echo
#echo "pass"
#echo "Next: I need to change nginx"
#echo
#echo
echo "============"
echo "Auto scripts"
echo "============"
echo "auto_setup(_mir).sh"
echo "taskset 0x1 /bin/sshd -D& (included)"
echo
#echo "=========="
#echo "First Try"
#echo "=========="
#ls /dev
#ls /dev/tty
#ls /dev/console
#tty
#/dev/tty
#System initialization by xiongjinfei
#::sysinit:/etc/init.d/rcS
#console::sysinit:/bin/sh
#::sysinit:taskset 0x1 /bin/sh
#::ctrlaltdel:/sbin/reboot
#::shutdown:/bin/umount -a -r
#echo "============"
#echo "Second Try"
#echo "============"
#taskset 0x1 cat /proc/interrupts
#taskset 0x1 /bin/sh

echo "- Platform specific (make $0 agnostic) -" # run it in sh
sleep 5 && /bin/bash auto_setup_mir.sh& # This line is customized by generate_ramdisk.sh
echo -e "------------------------\n\n"

export PATH=$PATH:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/sbin:/usr/sbin/:/opt/DIS/bin:/opt/DIS/bin/socket:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/sbin:/usr/sbin/:/sbin
echo -e "\n\n\n\n\n\n\n\n\n\n\nFrom sh to bash\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
echo "TODO: test"
taskset 0x1 sudo -i # colorful !!!!

echo "left colorful terminal"
taskset 0x1 /bin/bash
echo -e "$0 system poweroff!\n\n"
